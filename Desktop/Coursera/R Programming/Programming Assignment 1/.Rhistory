for (i in 1:332) { #for every i in the total number of files(332)
path <- c(paste(directory, "/",formatC(id[i], width=3, flag=0),".csv",sep=""))   #path gets the filepath (minus wd) to the files, id is used to determine which file is opened
data <- c(read.csv(path)) #data is turned into the table for each numbered CSV
s[i] <- sum(complete.cases(data)) #the ith part of S gets the number of complete cases in the data table
dat <- data.frame(cbind(id,nobs=s))   # Once it has looped through all of the i's, dat gets a data frame that turns the vector that is s into a datafram with the pieces of the vector as the columns. Nunmber of observations is determined by the size of s
}
return(dat)
}
complete("specdata",1:2)
dat
s <- vector() # s is now a logical vector that is blank
id<- 1:332
for (i in 1:332) { #for every i in the total number of files(332)
path <- c(paste(directory, "/",formatC(id[i], width=3, flag=0),".csv",sep=""))   #path gets the filepath (minus wd) to the files, id is used to determine which file is opened
data <- c(read.csv(path)) #data is turned into the table for each numbered CSV
s[i] <- sum(complete.cases(data)) #the ith part of S gets the number of complete cases in the data table
dat <- data.frame(cbind(id,nobs=s))   # Once it has looped through all of the i's, dat gets a data frame that turns the vector that is s into a datafram with the pieces of the vector as the columns. Nunmber of observations is determined by the size of s
}
dat
s <- vector() # s is now a logical vector that is blank
id<- 1:332
directory
for (i in 1:332)
path <- c(paste(directory, "/",formatC(id[i], width=3, flag=0),".csv",sep=""))
data <- c(read.csv(path))
s[i] <- sum(complete.cases(data))
dat <- data.frame(cbind(id,nobs=s))
dat
corr <- function(directory, threshold = 0) { #The function complete is a function of directory and id, which defaults to 1:332
s <- vector() # s is now a logical vector that is blank
id<- 1:332
for (i in 1:332) { #for every i in the total number of files(332)
path <- c(paste(directory, "/",formatC(id[i], width=3, flag=0),".csv",sep=""))   #path gets the filepath (minus wd) to the files, id is used to determine which file is opened
data <- c(read.csv(path)) #data is turned into the table for each numbered CSV
s[i] <- sum(complete.cases(data)) #the ith part of S gets the number of complete cases in the data table
dat <- data.frame(cbind(id,nobs=s))   # Once it has looped through all of the i's, dat gets a data frame that turns the vector that is s into a datafram with the pieces of the vector as the columns. Nunmber of observations is determined by the size of s
}
return(dat)
}
corr("specdata",2)
warnings()
complete <- function(directory, id = 1:332) { #The function complete is a function of directory and id, which defaults to 1:332
s <- vector() # s is now a logical vector that is blank
for (i in 1:length(id)) { #for every i in the length (332 is default length) do the following:
path <- c(paste(directory, "/",formatC(id[i], width=3, flag=0),".csv",sep=""))   #path gets the filepath (minus wd) to the files, id is used to determine which file is opened
data <- c(read.csv(path)) #data is turned into the table for each numbered CSV
s[i] <- sum(complete.cases(data)) #the ith part of S gets the number of complete cases in the data table
dat <- data.frame(cbind(id,nobs=s))   # Once it has looped through all of the i's, dat gets a dataa frame that turns the vector that is s into a datafram with the pieces of the vector as the columns. Nunmber of observations is determined by the size of s
return(dat)#???
}
complelte("specdata",1:2)
complete <- function(directory, id = 1:332) { #The function complete is a function of directory and id, which defaults to 1:332
s <- vector() # s is now a logical vector that is blank
for (i in 1:length(id)) { #for every i in the length (332 is default length) do the following:
path <- c(paste(directory, "/",formatC(id[i], width=3, flag=0),".csv",sep=""))   #path gets the filepath (minus wd) to the files, id is used to determine which file is opened
data <- c(read.csv(path)) #data is turned into the table for each numbered CSV
s[i] <- sum(complete.cases(data)) #the ith part of S gets the number of complete cases in the data table
dat <- data.frame(cbind(id,nobs=s))   # Once it has looped through all of the i's, dat gets a dataa frame that turns the vector that is s into a datafram with the pieces of the vector as the columns. Nunmber of observations is determined by the size of s
return(dat)#???
}
complete("specdata",1:2)
)
complete <- function(directory, id = 1:332) { #The function complete is a function of directory and id, which defaults to 1:332
s <- vector() # s is now a logical vector that is blank
for (i in 1:length(id)) { #for every i in the length (332 is default length) do the following:
path <- c(paste(directory, "/",formatC(id[i], width=3, flag=0),".csv",sep=""))   #path gets the filepath (minus wd) to the files, id is used to determine which file is opened
data <- c(read.csv(path)) #data is turned into the table for each numbered CSV
s[i] <- sum(complete.cases(data)) #the ith part of S gets the number of complete cases in the data table
dat <- data.frame(cbind(id,nobs=s))   # Once it has looped through all of the i's, dat gets a dataa frame that turns the vector that is s into a datafram with the pieces of the vector as the columns. Nunmber of observations is determined by the size of s
return(dat)#???
}
complete <- function(directory, id = 1:332) { #The function complete is a function of directory and id, which defaults to 1:332
s <- vector() # s is now a logical vector that is blank
for (i in 1:length(id)) { #for every i in the length (332 is default length) do the following:
path <- c(paste(directory, "/",formatC(id[i], width=3, flag=0),".csv",sep=""))   #path gets the filepath (minus wd) to the files, id is used to determine which file is opened
data <- c(read.csv(path)) #data is turned into the table for each numbered CSV
s[i] <- sum(complete.cases(data)) #the ith part of S gets the number of complete cases in the data table
dat <- data.frame(cbind(id,nobs=s))   # Once it has looped through all of the i's, dat gets a dataa frame that turns the vector that is s into a datafram with the pieces of the vector as the columns. Nunmber of observations is determined by the size of s
}
return(dat)#???
}
complete("specdata",1:2)
id<1:332
id<- 1:332
length(id)
corr <- function(directory, threshold = 0) { #The function complete is a function of directory and id, which defaults to 1:332
s <- vector() # s is now a logical vector that is blank
id<- 1:332
for (i in 1:332) { #for every i in the total number of files(332)
path <- c(paste(directory, "/",formatC(id[i], width=3, flag=0),".csv",sep=""))   #path gets the filepath (minus wd) to the files, id is used to determine which file is opened
data <- c(read.csv(path)) #data is turned into the table for each numbered CSV
s[i] <- sum(complete.cases(data)) #the ith part of S gets the number of complete cases in the data table
dat <- data.frame(cbind(id,nobs=s))   # Once it has looped through all of the i's, dat gets a data frame that turns the vector that is s into a datafram with the pieces of the vector as the columns. Nunmber of observations is determined by the size of s
}
return(dat)
}
corr("specdata",2)
corr <- function(directory, threshold = 0) { #The function complete is a function of directory and id, which defaults to 1:332
s <- vector() # s is now a logical vector that is blank
id<- 1:332
for (i in 1:332) { #for every i in the total number of files(332)
path <- c(paste(directory, "/",formatC(id[i], width=3, flag=0),".csv",sep=""))   #path gets the filepath (minus wd) to the files, id is used to determine which file is opened
data <- c(read.csv(path)) #data is turned into the table for each numbered CSV
s[i] <- sum(complete.cases(data)) #the ith part of S gets the number of complete cases in the data table
dat <- data.frame(cbind(id,nobs=s))   # Once it has looped through all of the i's, dat gets a data frame that turns the vector that is s into a datafram with the pieces of the vector as the columns. Nunmber of observations is determined by the size of s
}
return(dat)
}
corr("specdata",1:2)
complete("specdata",1:332)
complete("specdata",1:2)
s <- vector() # s is now a logical vector that is blank
id<- 1:2
for (i in 1:2) { #for every i in the total number of files(332)
path <- c(paste(directory, "/",formatC(id[i], width=3, flag=0),".csv",sep=""))   #path gets the filepath (minus wd) to the files, id is used to determine which file is opened
data <- c(read.csv(path)) #data is turned into the table for each numbered CSV
s[i] <- sum(complete.cases(data)) #the ith part of S gets the number of complete cases in the data table
dat <- data.frame(cbind(id,nobs=s))   # Once it has looped through all of the i's, dat gets a data frame that turns the vector that is s into a datafram with the pieces of the vector as the columns. Nunmber of observations is determined by the size of s
}
return(dat)
id<- 1:2
for (i in 1:2) { #for every i in the total number of files(332)
path <- c(paste(directory, "/",formatC(id[i], width=3, flag=0),".csv",sep=""))   #path gets the filepath (minus wd) to the files, id is used to determine which file is opened
data <- c(read.csv(path)) #data is turned into the table for each numbered CSV
s[i] <- sum(complete.cases(data)) #the ith part of S gets the number of complete cases in the data table
dat <- data.frame(cbind(id,nobs=s))   # Once it has looped through all of the i's, dat gets a data frame that turns the vector that is s into a datafram with the pieces of the vector as the columns. Nunmber of observations is determined by the size of s
}
dat
dat <- data.frame(cbind(id,nobs=s,sulfate,nitrate)
)
dat <- data.frame(cbind(id,nobs=s))
dat
dat[1]
dat[2]
dat[1,2]
dat[2,2]
dat[1,2]
dat[,1]
date[2]
dat[2]
dat[,1]
dat[,2]
dat[1,2]
dat[1,1]
dat[2,1]
dat[2,2]
dat[1,2]
dat[1,1]
dat[2,1]
dat[2,2]
cbind(id)
threshold <- 200
if(dat[i,2]) > threshold){
cbind(id)
}
if(dat[i,2]) > threshold){
cbind(id)
}
if((dat[i,2]) > threshold){
cbind(id)
}
threshold<- 200
if((dat[i,2]) > threshold){
cbind(id)
}
id<- 1:2
for (i in 1:2) { #for every i in the total number of files(332)
path <- c(paste(directory, "/",formatC(id[i], width=3, flag=0),".csv",sep=""))   #path gets the filepath (minus wd) to the files, id is used to determine which file is opened
data <- c(read.csv(path)) #data is turned into the table for each numbered CSV
s[i] <- sum(complete.cases(data)) #the ith part of S gets the number of complete cases in the data table
dat <- data.frame(cbind(id,nobs=s))   # Once it has looped through all of the i's, dat gets a data frame that turns the vector that is s into a datafram with the pieces of the vector as the columns. Nunmber of observations is determined by the size of s
if((dat[i,2]) > threshold){
idtable<- cbind(id)
}
}
idtable
idtable
if((dat[i,2]) > threshold){
idtable<- cbind(id[2,1])
}
}
dat
dat[1,2]
dat[2,2\]
dat[2,2]
for (i in 1:2) { #for every i in the total number of files(332)
path <- c(paste(directory, "/",formatC(id[i], width=3, flag=0),".csv",sep=""))   #path gets the filepath (minus wd) to the files, id is used to determine which file is opened
data <- c(read.csv(path)) #data is turned into the table for each numbered CSV
s[i] <- sum(complete.cases(data)) #the ith part of S gets the number of complete cases in the data table
dat <- data.frame(cbind(id,nobs=s))   # Once it has looped through all of the i's, dat gets a data frame that turns the vector that is s into a datafram with the pieces of the vector as the columns. Nunmber of observations is determined by the size of s
if((dat[i,2]) > threshold){
idtable<- cbind(id[2,1])
}
}
?cbind
data
s <- vector() # s is now a logical vector that is blank
id<- 1:2
for (i in 1:2) { #for every i in the total number of files(332)
path <- c(paste(directory, "/",formatC(id[i], width=3, flag=0),".csv",sep=""))   #path gets the filepath (minus wd) to the files, id is used to determine which file is opened
data <- c(read.csv(path)) #data is turned into the table for each numbered CSV
s[i] <- sum(complete.cases(data)) #the ith part of S gets the number of complete cases in the data table
dat <- data.frame(cbind(id,nobs=s))
}
dat
data
for (i in 1:2) { #for every i in the total number of files(332)
path <- c(paste(directory, "/",formatC(id[i], width=3, flag=0),".csv",sep=""))   #path gets the filepath (minus wd) to the files, id is used to determine which file is opened
data <- c(read.csv(path)) #data is turned into the table for each numbered CSV
s[i] <- sum(complete.cases(data)) #the ith part of S gets the number of complete cases in the data table
dat <- data.frame(cbind(id,nobs=s))   # Once it has looped through all of the i's, dat gets a data frame that turns the vector that is s into a datafram with the pieces of the vector as the columns. Nunmber of observations is determined by the size of s
if((dat[i,2]) > threshold){
idtable<- cbind(data[[sulfate]],data[[nitrate]],id)
}
}
data
for (i in 1:2) {
path <- c(paste(directory, "/",formatC(id[i], width=3, flag=0),".csv",sep=""))
data <- c(read.csv(path))
s[i] <- sum(complete.cases(data))
dat <- data.frame(cbind(id,nobs=s))
}
data
data <- c(read.csv(path))
data
path
i<-1
path <- c(paste(directory, "/",formatC(id[i], width=3, flag=0),".csv",sep=""))
path
data <- c(read.csv(path))
data
data <- c(read.csv(path))
complete <- function(directory, id = 1:332) { #The function complete is a function of directory and id, which defaults to 1:332
s <- vector() # s is now a logical vector that is blank
for (i in 1:length(id)) { #for every i in the length (332 is default length) do the following:
path <- c(paste(directory, "/",formatC(id[i], width=3, flag=0),".csv",sep=""))   #path gets the filepath (minus wd) to the files, id is used to determine which file is opened
data <- c(read.csv(path)) #data is turned into the table for each numbered CSV
s[i] <- sum(complete.cases(data)) #the ith part of S gets the number of complete cases in the data table
dat <- data.frame(cbind(id,nobs=s))   # Once it has looped through all of the i's, dat gets a dataa frame that turns the vector that is s into a datafram with the pieces of the vector as the columns. Nunmber of observations is determined by the size of s
}
return(dat)#???
}
complete("specdata",1:2)
data <- c(read.csv(path)) #data is turned into the table for each numbered CSV
data
read.csv(001.csv)
read.csv("001.csv")
getwd()
setwd( "C:/Users/kdavison/Desktop/R Programming/Programming Assignment 1/specdata")
read.csv("001.csv")
path <- c(paste(directory, "/",formatC(id[i], width=3, flag=0),".csv",sep=""))
data <- read.csv(path)
path
getwd()
setwd("C:/Users/kdavison/Desktop/R Programming/Programming Assignment 1/)
""
setwd("C:/Users/kdavison/Desktop/R Programming/Programming Assignment 1/")
data <- read.csv(path)
data
s[i] <- sum(complete.cases(data))
s
s <- vector()
s[i] <- sum(complete.cases(data))
s
dat <- data.frame(cbind(id,nobs=s))
dat
s <- vector() # s is now a logical vector that is blank
id<- 1:2
for (i in 1:2) { #for every i in the total number of files(332)
path <- c(paste(directory, "/",formatC(id[i], width=3, flag=0),".csv",sep=""))   #path gets the filepath (minus wd) to the files, id is used to determine which file is opened
data <- read.csv(path) #data is turned into the table for each numbered CSV
s[i] <- sum(complete.cases(data)) #the ith part of S gets the number of complete cases in the data table
dat <- data.frame(cbind(id,nobs=s))   # Once it has looped through all of the i's, dat gets a data frame that turns the vector that is s into a datafram with the pieces of the vector as the columns. Nunmber of observations is determined by the size of s
}
dat
dat[1,2]
dat[2,2]
threshold
data
idtable<- cbind(data[[sulfate]],data[[nitrate]],id)
idtable<- cbind(data[["sulfate"]],data[["nitrate"]],"id")
idtable
idtable<- cbind(data[["sulfate"]],data[["nitrate"]],data[["id"]])
idtable
data
completecases<- function(directory="specdata",id<-1:2) {
s <- vector() # s is now a logical vector that is blank
id<- 1:2
for (i in 1:2) { #for every i in the total number of files(332)
path <- c(paste(directory, "/",formatC(id[i], width=3, flag=0),".csv",sep=""))   #path gets the filepath (minus wd) to the files, id is used to determine which file is opened
data <- read.csv(path) #data is turned into the table for each numbered CSV
s[i] <- sum(complete.cases(data)) #the ith part of S gets the number of complete cases in the data table
dat <- data.frame(cbind(id,nobs=s))   # Once it has looped through all of the i's, dat gets a data frame that turns the vector that is s into a datafram with the pieces of the vector as the columns. Nunmber of observations is determined by the size of s
}
}
completecases<- function(directory="specdata",id<-1:2) {
s <- vector() # s is now a logical vector that is blank
id<- 1:2
for (i in 1:2) { #for every i in the total number of files(332)
path <- c(paste(directory, "/",formatC(id[i], width=3, flag=0),".csv",sep=""))   #path gets the filepath (minus wd) to the files, id is used to determine which file is opened
data <- read.csv(path) #data is turned into the table for each numbered CSV
s[i] <- sum(complete.cases(data)) #the ith part of S gets the number of complete cases in the data table
dat <- data.frame(cbind(id,nobs=s))   # Once it has looped through all of the i's, dat gets a data frame that turns the vector that is s into a datafram with the pieces of the vector as the columns. Nunmber of observations is determined by the size of s
dat
}
}
completecases<- function(directory="specdata",id<-1:2) {
s <- vector() # s is now a logical vector that is blank
id<- 1:2
for (i in 1:2) { #for every i in the total number of files(332)
path <- c(paste(directory, "/",formatC(id[i], width=3, flag=0),".csv",sep=""))   #path gets the filepath (minus wd) to the files, id is used to determine which file is opened
data <- read.csv(path) #data is turned into the table for each numbered CSV
s[i] <- sum(complete.cases(data)) #the ith part of S gets the number of complete cases in the data table
dat <- data.frame(cbind(id,nobs=s))   # Once it has looped through all of the i's, dat gets a data frame that turns the vector that is s into a datafram with the pieces of the vector as the columns. Nunmber of observations is determined by the size of s
dat
}
dat
id<- 1:2
for (i in id)
if((dat[i,2]) > threshold){
idtable<- cbind(data[["sulfate"]],data[["nitrate"]],data[["id"]])
}
}
id<- 1:2
for (i in id)
if((dat[i,2]) > threshold){
idtable<- cbind(data[["sulfate"]],data[["nitrate"]],data[["id"]])
}
idtable
threshold <- 0
id<- 1:2
for (i in id)
if((dat[i,2]) > threshold){
idtable<- cbind(data[["sulfate"]],data[["nitrate"]],data[["id"]])
}
idtable
idtable<- cbind(,data[["id"]]data[["sulfate"]],data[["nitrate"]])
idtable<- cbind(data[["id"]],data[["sulfate"]],data[["nitrate"]])
idtable
idtable[1]
idtable[1,1]
idtable[2,1]
i
i <- 1
dat[1,2] > threshold
data
data[1]
data[,1]
data
data[["id"]]
data[[nitrate]]
data[["nitrate"]]
data
data[4]
idtable<- cbind(data[4],data[["sulfate"]],data[["nitrate"]]
)
idtable
idtable<- cbind(data[4],data[["sulfate"]],data[["nitrate"]])
idNAs<- is.na(idtable)
idtablenoNas<- idNAs[!idNAs]
idtablenoNas
idNAs
idtable<- cbind(data[4],data[["sulfate"]],data[["nitrate"]])
idNAs<- is.na(idtable)
idtablenoNas<- itable[!idNAs]
idtable<- cbind(data[4],data[["sulfate"]],data[["nitrate"]])
idNAs<- is.na(idtable)
idtablenoNas<- idtable[!idNAs]
idtablenoNas
idtable
idtablenoNas<- compllete.cases(idtable)
idtablenoNas<- complete.cases(idtable)
idtablenoNas
idtablenoNas<- idtable[complete.cases(idtable)]
idtablenoNas<- idtable[complete.cases(idtable),]
idtablesnoNas
idtablenoNas
idtablenoNas
alltableoNA<- data.frame()
idtablenoNas
alltable<- data.frame(rbind(idtablelnoNas))
alltable<- data.frame(rbind(idtablenoNas))
id<- 1:2
alltableoNA<- data.frame()
for (i in id)
if((dat[i,2]) > threshold){
idtable<- cbind(data[4],data[["sulfate"]],data[["nitrate"]])
idtablenoNas<- idtable[complete.cases(idtable),]
alltable<- data.frame(rbind(idtablenoNas))
}
alltable
}
id<- 1:2
alltableoNA<- data.frame()
for (i in id)
if((dat[i,2]) > threshold){
idtable<- cbind(data[4],data[["sulfate"]],data[["nitrate"]])
idtablenoNas<- idtable[complete.cases(idtable),]
alltable<- data.frame(rbind(idtablenoNas))
}
alltable
?corr
?cor
nitrate<- idtablenoNas[["nitrate"]]
nitrate
nitrate<- idtablenoNas[3]
nitrate
allcor<- data.frame(rbind(cor(sulfate,nitrate)[i],)
)
allcor<- data.frame(rbind(cor(sulfate,nitrate))[i],)
allcor<- data.frame(rbind(cor(sulfate),cor(nitrate))
)
sulfate
idtable<- cbind(data[4],data[["sulfate"]],data[["nitrate"]])
idtablenoNas<- idtable[complete.cases(idtable),]
nitrate<- idtablenoNas[3]
sulfate<- idtablenoNas[4]
sulfate<- idtablenoNas[4]
idtablenoNas<- idtable[complete.cases(idtable),]
idtablenoNas
idtablenoNas<- idtable[complete.cases(idtable),]
nitrate<- idtablenoNas[2]
sulfate<- idtablenoNas[3]
allcor<- data.frame(rbind(cor(sulfate),cor(nitrate))
)
allcor
nitratae
nitrate
sulfate
datacombine<- function(directory,id=1:2){ #function1 is a function of the directory provided and id. The default is 1:332, but in practice this will be filed by the user as they apply the function Polllutantmean
newdirectory<- paste("C:/Users/kdavison/Desktop/R Programming/Programming Assignment 1/",directory,sep="") #This pastes together the filepath where all the files are stored to the specific directory used in the input
allfiles <- list.files(newdirectory,full.names=TRUE) #This provides a character vector of all of the files inside the direcotry provided
totaldata<- data.frame() #This produces a blank dataframe with 0 columns and 0 rows
for(i in id){ #For every i in 332
totaldata <- rbind(totaldata,read.csv(allfiles[i])) #this joins the empty data frame to the data of the first .csv file
}
totaldata #This prints total data, which is the combination of all of the 332 files?
}
corr <- function(directory, threshold = 0){
alldata <- datacombine(directory,id = 1:2)  #Call the datacombine function to create the dataframe of all of the files
s <- vector() # s is now a logical vector that is blank
id<- 1:332
sulfate<- vector() #make empty vectors which will then be filled by that column from the original data
nitrate<- vector() #make empty vectors which will then be filled by that column from the original data
for (i in 2) { #for every i in 332
s <- sum(complete.cases(alldata)) #the ith part of S gets the number of complete cases in the data table
alldatanoNAs <- na.omit(alldata)
sulfate <- alldatanoNAs[["sulfate"]]
nitrate <- alldatanoNAs[["nitrate"]]
}
correlation<- vector()
if(s > threshold)
{correlation[i] <- cor(sulfate,nitrate)}
correlation
}
corr("specdata",0)
corr("specdata",400)
corr <- function(directory, threshold = 0) {
# --- Assert 'directory' is a character vector of length 1 indicating the
# location of the CSV files.  'threshold' is a numeric vector of length 1
# indicating the number of completely observed observations (on all
# variables) required to compute the correlation between nitrate and
# sulfate; the default is 0.  Return a numeric vector of correlations.
# --- Assert create an empty numeric vector
corrsNum <- numeric(0)
# --- Assert get a data frame as ID = 1:332
nobsDfr <- complete("specdata")
# --- Assert apply threshold
nobsDfr <- nobsDfr[nobsDfr$nobs > threshold, ]
for (cid in nobsDfr$id) {
# --- Assert get a data frame as ID in $id
monDfr <- getmonitor(cid, directory)
# --- Assert calculate correlation between $sulfate and $nitrate
corrsNum <- c(corrsNum, cor(monDfr$sulfate, monDfr$nitrate, use = "pairwise.complete.obs"))
}
# --- Assert return value is a numeric vector of correlations
return(corrsNum)
}
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating the location of
## the CSV files
## 'threshold' is a numeric vector of length 1 indicating the number of
## completely observed observations (on all variables) required to compute
## the correlation between nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
df = complete(directory)
ids = df[df["nobs"] > threshold, ]$id
corrr = numeric()
for (i in ids) {
newRead = read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
dff = newRead[complete.cases(newRead), ]
corrr = c(corrr, cor(dff$sulfate, dff$nitrate))
}
return(corrr)
}
complete <- function(directory, id = 1:332) {
f <- function(i) {
data = read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
sum(complete.cases(data))
}
nobs = sapply(id, f)
return(data.frame(id, nobs))
}
cr <- corr("specdata", 150)
head(cr)
submit()
submit()
submit()
submit()
?complete
