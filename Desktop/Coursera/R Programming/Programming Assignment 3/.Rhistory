return(NA)
}
#Return the hospital anme in the statte with the given rank 30-day death rate
o = order(df[,2],df[,1])
df[o, ][num,1]
}
rankhospital("TX","heart failure", 4)
rankhospital<- function(state,outcome,num = "best"){
#Read the outcome data
data <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
#Make sure that the outcomes and states are valid
if(!state %in% unique(data[ ,7])) {
stop('invalid state')
}
switch(outcome,'heart attack' = {
col = 11},
'heart failure' = {
col = 17}
'pneunomia' = {
col= 23
}, stop("invalid outcome"))
data[,col] = as.numeric(dat[,col])
df = data[data[,7] == state,c(2,col)]
df = na.omit(df)
nhospital = nrow(df)
switch(num,best = {
num = 1
}, worst = {
num = nhospital})
if (num> nhospital) {
return(NA)
}
#Return the hospital anme in the statte with the given rank 30-day death rate
o = order(df[,2],df[,1])
df[o, ][num,1]
}
rankhospital<- function(state,outcome,num = "best"){
#Read the outcome data
data <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
#Make sure that the outcomes and states are valid
if(!state %in% unique(data[ ,7])) {
stop('invalid state')
}
switch(outcome,'heart attack' = {
col = 11},
'heart failure' = {
col = 17}
'pneunomia' = {
col= 23
}, stop("invalid outcome"))
data[ ,col] = as.numeric(data[,col])
df = data[data[,7] == state,c(2,col)]
df = na.omit(df)
nhospital = nrow(df)
switch(num,best = {
num = 1
}, worst = {
num = nhospital})
if (num> nhospital) {
return(NA)
}
#Return the hospital anme in the statte with the given rank 30-day death rate
o = order(df[,2],df[,1])
df[o, ][num,1]
}
rankhospital<- function(state,outcome,num = "best"){
#Read the outcome data
data <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
#Make sure that the outcomes and states are valid
if(!state %in% unique(data[ ,7])) {
stop('invalid state')
}
switch(outcome,'heart attack' = {
col = 11},
'heart failure' = {
col = 17}
'pneunomia' = {
col= 23
}, stop("invalid outcome"))
data[ ,col] = as.numeric(data[,col])
df = data[data[,7] == state,c(2,col)]
df = na.omit(df)
nhospital = nrow(df)
switch(num,best = {
num = 1
}, worst = {
num = nhospital})
if (num> nhospital) {
return(NA)
}
#Return the hospital anme in the statte with the given rank 30-day death rate
o <- order(df[, 2],df[, 1])
df[o, ][num,1]
}
rankhospital<- function(state,outcome,num = "best"){
#Read the outcome data
data <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
#Make sure that the outcomes and states are valid
if(!state %in% unique(data[, 7])) {
stop('invalid state')
}
switch(outcome,'heart attack' = {
col = 11},
'heart failure' = {
col = 17}
'pneunomia' = {
col= 23
}, stop("invalid outcome"))
data[ ,col] = as.numeric(data[,col])
df = data[data[,7] == state,c(2,col)]
df = na.omit(df)
nhospital = nrow(df)
switch(num,best = {
num = 1
}, worst = {
num = nhospital})
if (num> nhospital) {
return(NA)
}
rankhospital<- function(state,outcome,num = "best"){
#Read the outcome data
data <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
#Make sure that the outcomes and states are valid
if(!state %in% unique(data[, 7])) {
stop('invalid state')
}
switch(outcome,'heart attack' = {
col = 11},
'heart failure' = {
col = 17}
'pneunomia' = {
col= 23
}, stop("invalid outcome"))
data[ ,col] = as.numeric(data[,col])
df = data[data[,7] == state,c(2,col)]
df = na.omit(df)
nhospital = nrow(df)
switch(num.best = {
num = 1
}, worst = {
num = nhospital})
if (num> nhospital) {
return(NA)
}
#Return the hospital anme in the statte with the given rank 30-day death rate
o = order(df[, 2],df[, 1])
df[o, ][num,1]
}
best<- function(state,outcome){
data<- read.csv("outcome-of-care-measures.csv",colClasses = "character") #Read in the CSV
if(!state %in% unique(data[,7])){
stop("invalid state") #Check to make sure the state that is input is a valid state
}
switch(outcome,'heart attack' = { #Assigns the correct columns for the input valuess or returns an error for an invalid outcome
col=11
} , 'heart failure' = {
col = 17
} , 'pneumonia' = {
col = 23
}, stop("invalid outcome"))
answer = data[data$State == state,c(2,col)]
answer[which.min(answer[ , 2]),1]
}
best("VA","heart attack")
rankhospital<- function(state,outcome,num = "best"){
#Read the outcome data
data <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
#Make sure that the outcomes and states are valid
if(!state %in% unique(data[, 7])) {
stop('invalid state')
}
switch(outcome,'heart attack' = {
col = 11},
'heart failure' = {
col = 17}
'pneunomia' = {
col= 23
}, stop("invalid outcome"))
data[ ,col] = as.numeric(data[,col])
df = data[data[,7] == state,c(2,col)]
df = na.omit(df)
nhospital = nrow(df)
switch(num.best = {
num = 1
}, worst = {
num = nhospital})
if (num> nhospital) {
return(NA)
}
rankhospital<- function(state,outcome,num = "best"){
#Read the outcome data
data <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
#Make sure that the outcomes and states are valid
if(!state %in% unique(data[, 7])) {
stop('invalid state')
}
switch(outcome,'heart attack' = {
col = 11},
'heart failure' = {
col = 17}
'pneunomia' = {
col= 23
}, stop("invalid outcome"))
data[ ,col] = as.numeric(data[,col])
df = data[data[,7] == state,c(2,col)]
df = na.omit(df)
nhospital = nrow(df)
switch(num,best = {
num = 1
}, worst = {
num = nhospital})
if (num> nhospital) {
return(NA)
}
rankhospital<- function(state,outcome,num = "best"){
#Read the outcome data
data <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
#Make sure that the outcomes and states are valid
if(!state %in% unique(data[, 7])) {
stop('invalid state')
}
switch(outcome,'heart attack' = {
col = 11},
'heart failure' = {
col = 17}
'pneunomia' = {
col= 23
}, stop("invalid outcome"))
data[ ,col] = as.numeric(data[,col])
df = data[data[,7] == state,c(2,col)]
df = na.omit(df)
nhospital = nrow(df)
switch(num, best = {
num = 1
}, worst = {
num = nhospital})
if (num> nhospital) {
return(NA)
}
#Return the hospital anme in the statte with the given rank 30-day death rate
o = order(df[, 2],df[, 1])
df[o, ][num,1]
}
rankhospital<- function(state,outcome,num = "best"){
#Read the outcome data
data <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
#Make sure that the outcomes and states are valid
if(!state %in% unique(data[, 7])) {
stop('invalid state')
}
switch(outcome,'heart attack' = {
col = 11},
'heart failure' = {
col = 17}
'pneunomia' = {
col= 23
}, stop("invalid outcome"))
data[ ,col] = as.numeric(data[,col])
df = data[data[,7] == state, c(2,col)]
df = na.omit(df)
nhospital = nrow(df)
switch(num, best = {
num = 1
}, worst = {
num = nhospital})
if (num > nhospital) {
return(NA)
}
#Return the hospital anme in the statte with the given rank 30-day death rate
o = order(df[, 2],df[, 1])
df[o, ][num,1]
}
rankhospital <- function(state, outcome, num = "best") {
## Read the outcome data
dat <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if (!state %in% unique(dat[, 7])) {
stop("invalid state")
}
switch(outcome, `heart attack` = {
col = 11
}, `heart failure` = {
col = 17
}, pneumonia = {
col = 23
}, stop("invalid outcome"))
dat[, col] = as.numeric(dat[, col])
df = dat[dat[, 7] == state, c(2, col)]
df = na.omit(df)
nhospital = nrow(df)
switch(num, best = {
num = 1
}, worst = {
num = nhospital
})
if (num > nhospital) {
return(NA)
}
## Return hospital name in that state with the given rank 30-day death rate
o = order(df[, 2], df[, 1])
df[o, ][num, 1]
}
rankhospital("TX", "heart failure", 4)
rankhospital<- function(state,outcome,num = "best"){
#Read the outcome data
data <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
#Make sure that the outcomes and states are valid
if(!state %in% unique(data[, 7])) {
stop('invalid state')
}
switch(outcome,'heart attack' = {
col = 11},
`heart failure` = {
col = 17}
`pneunomia` = {
col= 23
}, stop("invalid outcome"))
data[ ,col] = as.numeric(data[,col])
df = data[data[,7] == state, c(2,col)]
df = na.omit(df)
nhospital = nrow(df)
switch(num, best = {
num = 1
}, worst = {
num = nhospital})
if (num > nhospital) {
return(NA)
}
#Return the hospital anme in the statte with the given rank 30-day death rate
o = order(df[, 2],df[, 1])
df[o, ][num,1]
}
rankhospital("TX","heart failure", 4)
submit()
submit8()
submit()
submit()
rankhospital<- function(state,outcome,num = "best"){
#Read the outcome data
data <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
#Make sure that the outcomes and states are valid
if(!state %in% unique(data[, 7])) {
stop('invalid state')
}
switch(outcome,'heart attack' = {
col = 11},
`heart failure` = {
col = 17}
`pneunomia` = {
col= 23
}, stop("invalid outcome"))
data[ ,col] = as.numeric(data[,col])
df = data[data[,7] == state, c(2,col)]
df = na.omit(df)
nhospital = nrow(df)
switch(num, best = {
num = 1
}, worst = {
num = nhospital})
if (num > nhospital) {
return(NA)
}
rankhospital<- function(state,outcome,num = "best"){
#Read the outcome data
data <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
#Make sure that the outcomes and states are valid
if(!state %in% unique(data[, 7])) {
stop('invalid state')
}
switch(outcome,'heart attack' = {
col = 11},
'heart failure' = {
col = 17}
'pneunomia' = {
col= 23
}, stop("invalid outcome"))
data[ ,col] = as.numeric(data[,col])
df = data[data[,7] == state, c(2,col)]
df = na.omit(df)
nhospital = nrow(df)
switch(num, best = {
num = 1
}, worst = {
num = nhospital})
if (num > nhospital) {
return(NA)
}
?switch
?col
rankall <- function(outcome, num = "best"){
#Read in data
data <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
## Check that the state and outcome given are valid
states <- unique(data[,7])
switch(outcome,'heart attack' = {
col = 11 },
'heart failure' = {
col = 17 },
'pneumonia' = {
col =23
}, stop("invalid outcome"))
#Return hospital name in that state with the given rank 30 day death rate
data[, col] = as.numeric(data[,col])
data <- data[, c(2, 7, col)] # leave only name, state, death rate
data <- na.omit(data)
}
rank_in_state <- function(state){
df = data[data[ ,2]==state,]
nhospital = nrow(df)
switch(num, best = {
num = 1}
worse = num = nhospital})
if (num > nhospital){
result = NA}
o <- order(df[,3], df[,1])
result <- df[o, ][num,1]
c(result,state)}
output <- do.call(rbind,lapply(states,rank_in_state))
output <- output[order(output[,2]),]
rownames(output) <- output[,2]
colnames(output)<- c("hospital","state")
data.frame(output)
}
rankhospital<- function(state,outcome,num = "best"){
#Read the outcome data
data <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
#Make sure that the outcomes and states are valid
if(!state %in% unique(data[, 7])) {
stop('invalid state')
}
switch(outcome,'heart attack' = {
col = 11},
'heart failure' = {
col = 17}
'pneunomia' = {
col= 23
}, stop("invalid outcome"))
data[ ,col] <- as.numeric(data[,col])
df <- data[data[,7] == state, c(2,col)]
df <- na.omit(df)
nhospital = nrow(df)
switch(num, best = {
num = 1
}, worst = {
num = nhospital})
if (num > nhospital) {
return(NA)
}
#Return the hospital anme in the statte with the given rank 30-day death rate
o <- order(df[, 2],df[, 1])
df[o, ][num,1]
}
rankhospital<- function(state,outcome,num = "best"){
#Read the outcome data
data <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
#Make sure that the outcomes and states are valid
if(!state %in% unique(data[, 7])) {
stop('invalid state')
}
switch(outcome,'heart attack' = {
col = 11},
'heart failure' = {
col = 17}
'pneunomia' = {
col= 23
}, stop("invalid outcome"))
data[ ,col] <- as.numeric(data[,col])
df <- data[data[,7] == state, c(2,col)]
df <- na.omit(df)
nhospital = nrow(df)
switch(num, "best" = {
num = 1
}, "worst" = {
num = nhospital})
if (num > nhospital) {
return(NA)
}
best <- function(state, outcome) {
## Read outcome data
outcomeCM<-read.csv("outcome-of-care-measures.csv",colClasses = "character") # if not using "colClass" option, death rate will be factor class and as.numberic() will get wrong data
stateName<-outcomeCM[,7] # the State column (no NAs)
stateNameUni<-unique(stateName[!is.na(stateName)])
state.Name.Order <- stateNameUni[order(stateNameUni)]
## Check that state and outcome are valid
const <- list(outcome.Index=c("heart attack","heart failure","pneumonia"),
state=state.Name.Order,
dr.index=list(heart.attack=11,heart.failure=17,pneumonia=23)
)
if(!is.element(state,const$state)){
#return(sprintf("Error in best(%s, %s) : invalid state",state,outcome))
stop("invalid state")
}
if(!is.element(outcome,const$outcome)){
#return(sprintf("Error in best(%s, %s) : invalid outcome",state,outcome))
stop("invalid outcome")
}
const.Index <- which(const$outcome.Index==outcome)         # unifiy outcome and " death rate column" using index
dr <- suppressWarnings(as.numeric(outcomeCM[,const$dr.index[[const.Index]]]))
orderHospitalAll<-outcomeCM[order(dr,outcomeCM[,2]),]
orderHospitalAll[orderHospitalAll$State==state,][,2][1]
}
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit9)
submit()
submit()
